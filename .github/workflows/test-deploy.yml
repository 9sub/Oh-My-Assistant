name: Deploy to EC2

on:
  push:
    branches:
      - test

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
      - name: Build docker file and setting deploy files
        run: |
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "SQLALCHEMY_DATABASE_URL=${{ secrets.SQLALCHEMY_DATABASE_URL }}" >> .env

          echo "HOST=${{ secrets.HOST }}" >> .env
          echo "DB=${{ secrets.DB }}" >> .env
          echo "USER=${{ secrets.USER }}" >> .env
          echo "PASSWORD=${{ secrets.PASSWORD }}" >> .env

          echo "AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}" >> .env
          echo "AWS_S3_ACCESS_KEY_ID=${{ secrets.AWS_S3_ACCESS_KEY_ID }}" >> .env
          echo "AWS_S3_SECRET_ACCESS_KEY=${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_S3_REGION=${{ secrets.AWS_S3_REGION }}" >> .env

          echo "SECRETE_KEY=${{ secrets.SECRETE_KEY }}" >> .env

          echo "LORA_MODEL_SERVER=${{ secrets.LORA_MODEL_SERVER }}" >> .env
          echo "DREAMSTYLER_MODEL_SERVER=${{ secrets.DREAMSTYLER_MODEL_SERVER }}" >> .env
          echo "POSE_MODEL_SERVER=${{ secrets.POSE_MODEL_SERVER }}" >> .env

          echo "HOSTNAME=${{ secrets.HOSTNAME }}" >> .env

          cd backend
          docker build -t gangyub/boilerplate-fastapi-mysql-docker-backend:latest .
          cd ../frontend
          docker build -t gangyub/boilerplate-fastapi-mysql-docker-frontend:latest .
          cd ..
          docker push gangyub/boilerplate-fastapi-mysql-docker-frontend
          docker push gangyub/boilerplate-fastapi-mysql-docker-backend

      - name: executing docker-compose up on main server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER_NAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            docker-compose up -d
